version: 2.1

executors:
  go:
    docker:
      - image: circleci/golang:1.12
    working_directory: /tmp/octopus

defaults: &defaults
  docker:
    - image: circleci/golang:1.12
  working_directory: /go/src/github.com/TruStory/truchain
  environment:
    GOBIN: /tmp/workspace/bin

jobs:
  setup_dependencies:
    <<: *defaults
    steps:
      - run: mkdir -p /tmp/workspace/bin
      - run: mkdir -p /tmp/workspace/profiles
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run:
          name: dependencies
          command: |
            export PATH="$GOBIN:$PATH"
            make update_deps
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - bin
            - profiles
  check:
    <<: *defaults
    parallelism: 1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: dependencies
          command: |
            export PATH="$GOBIN:$PATH"
            make update_deps
      - run:
          name: Get golangci
          command: |
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.16.0
      - run:
          name: Lint source
          command: |
            export PATH="$GOBIN:$PATH"
            make check
  deploy:
    executor: go
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7a:fe:42:64:1d:e4:c0:1a:cc:aa:8c:5e:5e:e8:f8:03"
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                mkdir -p ~/.ssh
                ssh-keyscan $VENICE4_HOST >> ~/.ssh/known_hosts
                ssh $VENICE4_USER@$VENICE4_HOST "sudo systemctl stop truchaind.service"
                ssh $VENICE4_USER@$VENICE4_HOST "cd /home/ubuntu/go/src/github.com/TruStory/truchain && git pull && export GOBIN=$GOPATH/bin && make update_deps && make build-linux && cp bin/truchaind /home/ubuntu/go/bin/"
                ssh $VENICE4_USER@$VENICE4_HOST "sudo systemctl start truchaind.service"
                echo "deploying to venice4"
            elif [ "${CIRCLE_BRANCH}" == "develop" ]
            then
                mkdir -p ~/.ssh
                ssh-keyscan $DEVNET_HOST >> ~/.ssh/known_hosts
                ssh $DEVNET_USER@$DEVNET_HOST "sudo systemctl stop truchaind.service"
                ssh $DEVNET_USER@$DEVNET_HOST "cd /home/ubuntu/go/src/github.com/TruStory/truchain && git pull && export GOBIN=$GOPATH/bin && make update_deps && make build-linux && cp bin/truchaind /home/ubuntu/go/bin/"
                ssh $DEVNET_USER@$DEVNET_HOST "sudo systemctl start truchaind.service"
                echo "deployed to devnet"
            fi
  test_unit:
    <<: *defaults
    parallelism: 2
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: dependencies
          command: |
            export PATH="$GOBIN:$PATH"
            make update_deps
      - run:
          name: Run unit tests
          command: |
            export PATH="$GOBIN:$PATH"
            make test_cover
      - run:
          name: Upload coverage report
          command: |
            export PATH="$GOBIN:$PATH"
            bash <(curl -s https://codecov.io/bash)
  data_dump:
    <<: *defaults
    working_directory: /tmp/truchaind
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7a:fe:42:64:1d:e4:c0:1a:cc:aa:8c:5e:5e:e8:f8:03"
      - attach_workspace:
          at: /tmp/truchaind/backups
      - run:
          name: Dump chain data
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan $VENICE4_HOST >> ~/.ssh/known_hosts
            ssh $VENICE4_USER@$VENICE4_HOST "sudo systemctl stop truchaind.service"
            ssh $VENICE4_USER@$VENICE4_HOST "tar -zcvf .truchaind.tar.gz .truchaind"
            ssh $VENICE4_USER@$VENICE4_HOST "sudo systemctl start truchaind.service"
            mkdir -p backups
            scp "$VENICE4_USER@$VENICE4_HOST:/home/ubuntu/.truchaind.tar.gz" "/tmp/truchaind/backups/.truchaind.tar.gz"
            echo "Backed up chain data"
      - persist_to_workspace:
          root: backups
          paths:
          - .truchaind.tar.gz
  s3_upload:
    docker:
      - image: circleci/python:2.7-jessie    
    working_directory: /tmp/truchaind
    steps:
      - attach_workspace:
          at: /tmp/truchaind/backups
      - run:
          name: List backups
          command: |
            pwd
            ls -l ./backups/
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Upload to S3
          command: aws s3 cp ./backups/.truchaind.tar.gz s3://io-trustory-backups/chain/$(date +%y%m%d%H).truchaind.tar.gz

workflows:
  version: 2
  deploy-flow:
    jobs:
      - setup_dependencies
      - check:
          requires:
            - setup_dependencies
      - test_unit:
          context: truchain-context
          requires:
            - setup_dependencies
      - data_dump:
          filters:
            branches:
              only:
                - master
      - s3_upload:
          requires:
            - data_dump
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - check
            - test_unit
          filters:
            branches:
              only:
                - master
                - develop
  nightly-backup:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - data_dump
      - s3_upload:
          requires:
            - data_dump
